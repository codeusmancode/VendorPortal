package com.usaparel.vpmodel.VO;

import com.usaparel.vpmodel.EO.CustShipmentDeliveryChallanImpl;

import java.math.BigDecimal;

import java.sql.CallableStatement;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Nov 30 11:21:19 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VOCustShipmentDeliveryChallanRowImpl extends ViewRowImpl implements com.usaparel.vpmodel.VO.common.VOCustShipmentDeliveryChallanRow {


    public static final int ENTITY_CUSTSHIPMENTDELIVERYCHALLAN = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ChallanId,
        ChallanNumber,
        VehicleType,
        DriverContacts,
        ChallanDescription,
        MediumType,
        DeliveryDate,
        ChallanStatus,
        TotalQuantity,
        VehicleNumber,
        SupplierId,
        VOXXCustShipmentPacking,
        AppModule_LovMedium1_1,
        AppModule_LovVehicleType1_1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int CHALLANID = AttributesEnum.ChallanId.index();
    public static final int CHALLANNUMBER = AttributesEnum.ChallanNumber.index();
    public static final int VEHICLETYPE = AttributesEnum.VehicleType.index();
    public static final int DRIVERCONTACTS = AttributesEnum.DriverContacts.index();
    public static final int CHALLANDESCRIPTION = AttributesEnum.ChallanDescription.index();
    public static final int MEDIUMTYPE = AttributesEnum.MediumType.index();
    public static final int DELIVERYDATE = AttributesEnum.DeliveryDate.index();
    public static final int CHALLANSTATUS = AttributesEnum.ChallanStatus.index();
    public static final int TOTALQUANTITY = AttributesEnum.TotalQuantity.index();
    public static final int VEHICLENUMBER = AttributesEnum.VehicleNumber.index();
    public static final int SUPPLIERID = AttributesEnum.SupplierId.index();
    public static final int VOXXCUSTSHIPMENTPACKING = AttributesEnum.VOXXCustShipmentPacking.index();
    public static final int APPMODULE_LOVMEDIUM1_1 = AttributesEnum.AppModule_LovMedium1_1.index();
    public static final int APPMODULE_LOVVEHICLETYPE1_1 = AttributesEnum.AppModule_LovVehicleType1_1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VOCustShipmentDeliveryChallanRowImpl() {
    }

    /**
     * Gets CustShipmentDeliveryChallan entity object.
     * @return the CustShipmentDeliveryChallan
     */
    public CustShipmentDeliveryChallanImpl getCustShipmentDeliveryChallan() {
        return (CustShipmentDeliveryChallanImpl) getEntity(ENTITY_CUSTSHIPMENTDELIVERYCHALLAN);
    }

    /**
     * Gets the attribute value for CHALLAN_ID using the alias name ChallanId.
     * @return the CHALLAN_ID
     */
    public BigDecimal getChallanId() {
        return (BigDecimal) getAttributeInternal(CHALLANID);
    }

    /**
     * Sets <code>value</code> as attribute value for CHALLAN_ID using the alias name ChallanId.
     * @param value value to set the CHALLAN_ID
     */
    public void setChallanId(BigDecimal value) {
        setAttributeInternal(CHALLANID, value);
    }

    /**
     * Gets the attribute value for CHALLAN_NUMBER using the alias name ChallanNumber.
     * @return the CHALLAN_NUMBER
     */
    public String getChallanNumber() {
        return (String) getAttributeInternal(CHALLANNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for CHALLAN_NUMBER using the alias name ChallanNumber.
     * @param value value to set the CHALLAN_NUMBER
     */
    public void setChallanNumber(String value) {
        setAttributeInternal(CHALLANNUMBER, value);
    }

    /**
     * Gets the attribute value for VEHICLE_TYPE using the alias name VehicleType.
     * @return the VEHICLE_TYPE
     */
    public BigDecimal getVehicleType() {
        return (BigDecimal) getAttributeInternal(VEHICLETYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for VEHICLE_TYPE using the alias name VehicleType.
     * @param value value to set the VEHICLE_TYPE
     */
    public void setVehicleType(BigDecimal value) {
        setAttributeInternal(VEHICLETYPE, value);
    }

    /**
     * Gets the attribute value for DRIVER_CONTACTS using the alias name DriverContacts.
     * @return the DRIVER_CONTACTS
     */
    public String getDriverContacts() {
        return (String) getAttributeInternal(DRIVERCONTACTS);
    }

    /**
     * Sets <code>value</code> as attribute value for DRIVER_CONTACTS using the alias name DriverContacts.
     * @param value value to set the DRIVER_CONTACTS
     */
    public void setDriverContacts(String value) {
        setAttributeInternal(DRIVERCONTACTS, value);
    }

    /**
     * Gets the attribute value for CHALLAN_DESCRIPTION using the alias name ChallanDescription.
     * @return the CHALLAN_DESCRIPTION
     */
    public String getChallanDescription() {
        return (String) getAttributeInternal(CHALLANDESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for CHALLAN_DESCRIPTION using the alias name ChallanDescription.
     * @param value value to set the CHALLAN_DESCRIPTION
     */
    public void setChallanDescription(String value) {
        setAttributeInternal(CHALLANDESCRIPTION, value);
    }

    /**
     * Gets the attribute value for MEDIUM_TYPE using the alias name MediumType.
     * @return the MEDIUM_TYPE
     */
    public BigDecimal getMediumType() {
        return (BigDecimal) getAttributeInternal(MEDIUMTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for MEDIUM_TYPE using the alias name MediumType.
     * @param value value to set the MEDIUM_TYPE
     */
    public void setMediumType(BigDecimal value) {
        setAttributeInternal(MEDIUMTYPE, value);
    }

    /**
     * Gets the attribute value for DELIVERY_DATE using the alias name DeliveryDate.
     * @return the DELIVERY_DATE
     */
    public Timestamp getDeliveryDate() {
        return (Timestamp) getAttributeInternal(DELIVERYDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DELIVERY_DATE using the alias name DeliveryDate.
     * @param value value to set the DELIVERY_DATE
     */
    public void setDeliveryDate(Timestamp value) {
        setAttributeInternal(DELIVERYDATE, value);
    }

    /**
     * Gets the attribute value for CHALLAN_STATUS using the alias name ChallanStatus.
     * @return the CHALLAN_STATUS
     */
    public String getChallanStatus() {
        return (String) getAttributeInternal(CHALLANSTATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for CHALLAN_STATUS using the alias name ChallanStatus.
     * @param value value to set the CHALLAN_STATUS
     */
    public void setChallanStatus(String value) {
        setAttributeInternal(CHALLANSTATUS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TotalQuantity.
     * @return the TotalQuantity
     */
    public Number getTotalQuantity() {
        return (Number) getAttributeInternal(TOTALQUANTITY);
    }

    /**
     * Gets the attribute value for VEHICLE_NUMBER using the alias name VehicleNumber.
     * @return the VEHICLE_NUMBER
     */
    public String getVehicleNumber() {
        return (String) getAttributeInternal(VEHICLENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for VEHICLE_NUMBER using the alias name VehicleNumber.
     * @param value value to set the VEHICLE_NUMBER
     */
    public void setVehicleNumber(String value) {
        setAttributeInternal(VEHICLENUMBER, value);
    }

    /**
     * Gets the attribute value for SUPPLIER_ID using the alias name SupplierId.
     * @return the SUPPLIER_ID
     */
    public BigDecimal getSupplierId() {
        return (BigDecimal) getAttributeInternal(SUPPLIERID);
    }

    /**
     * Sets <code>value</code> as attribute value for SUPPLIER_ID using the alias name SupplierId.
     * @param value value to set the SUPPLIER_ID
     */
    public void setSupplierId(BigDecimal value) {
        setAttributeInternal(SUPPLIERID, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link VOXXCustShipmentPacking.
     */
    public RowIterator getVOXXCustShipmentPacking() {
        return (RowIterator) getAttributeInternal(VOXXCUSTSHIPMENTPACKING);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppModule_LovMedium1_1.
     */
    public RowSet getAppModule_LovMedium1_1() {
        return (RowSet) getAttributeInternal(APPMODULE_LOVMEDIUM1_1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AppModule_LovVehicleType1_1.
     */
    public RowSet getAppModule_LovVehicleType1_1() {
        return (RowSet) getAttributeInternal(APPMODULE_LOVVEHICLETYPE1_1);
    }

    public void shipChallan(){
        String html1 = "<html>\n" +
        "<head>\n" + 
        "		<style>\n" + 
        "			th { background-color:#DEDEDE; }\n" + 
        "			td { background-color:#BCD2EE; }\n" + 
        "                      .headerdata { background-color:#f7f7f7; }\n"+
        "		</style>\n" + 
        "	<head>"+
        "	<body>\n" + 
        "		<table><tr><td class=headerdata >challan# </td> <td class=headerdata ><u>"+getChallanNumber()+"</u></td></tr> \n" + 
        "		<tr><td class=headerdata >Driver Contact</td> <td class=headerdata ><u>"+getDriverContacts()+"</u></td></tr>\n" + 
        "		<tr><td class=headerdata >Vehicle Type</td> <td class=headerdata ><u>"+getVehicleType()+"</u></td></tr>\n" + 
        "		<tr><td class=headerdata >Date </td> <td class=headerdata ><u>"+getDeliveryDate()+"</u></td></tr>\n" + 
        "		<tr><td class=headerdata >Description </td> <td class=headerdata ><u>"+getChallanDescription()+"</u></td></tr>\n" + 
        "               <tr><td class=headerdata >Total Quantity </td> <td class=headerdata ><u>"+getTotalQuantity()+"</u></td></tr>\n" + 
        "               <tr><td class=headerdata >Vehicle Number </td> <td class=headerdata ><u>"+getVehicleNumber()+"</u></td></tr>\n" + 
        "		<table>\n" + 
        "                       <th>SR#</th>"+
        "			<th>PO#</th>\n" + 
        "			<th>PO Line#</th>\n" + 
        "			<th>Item</th>\n" + 
        "			<th>Quantity</th>\n" + 
        "			<th>Parent Challan</th>\n" ;
        
       
        String html3 = "	</table>\n" + 
        "	<body>\n" + 
        "</html>";
        
        PreparedStatement pst = null;
        ResultSet executeQuery = null;
        String status = "SHIPPED";
        
        CallableStatement cst = null;
        
        try{
            
            pst =  getDBTransaction().createPreparedStatement("update cust_shipment_packing set status = ? where delivery_challan_id = ?",0);
            pst.setString(1, status);
            pst.setInt(2, getChallanId().intValue());
            //int id = pst.executeUpdate();
            
//            System.out.println("Success: "+id);
            String packsQuery = "select          dc.challan_number," + 
            "                dc.vehicle_number," + 
            "                nvl(dc1.challan_number,'N/A') parent_challan_number, " + 
            "                    pha.segment1, " + 
            "                    pla.line_num,  " + 
            "                    pla.item_description,  " + 
            "                    csp.packing_qty, " + 
            "                    csp.parent_challan,  " + 
            "                    csp.packing_line_num   " + 
            "            from cust_shipment_packing csp,   " + 
            "                po_lines_all pla,  " + 
            "                po_headers_all pha, " + 
            "                cust_shipment_delivery_challan dc, " + 
            "                cust_shipment_delivery_challan dc1   " + 
            "            where csp.po_header_id = pha.po_header_id   " + 
            "            and pla.po_header_id = pha.po_header_id  " + 
            "            and pla.po_line_id = csp.po_line_id  " + 
            "            and csp.delivery_challan_id = ? " + 
            "            and dc.challan_id = csp.delivery_challan_id " + 
            "            and dc1.challan_id(+) = csp.parent_challan " + 
            "            order by pha.segment1, pla.line_num";
            
            pst = getDBTransaction().createPreparedStatement(packsQuery, DBTransaction.DEFAULT);
            pst.setInt(1, getChallanId().intValue());
            
            
            executeQuery = pst.executeQuery();
            
            
            StringBuilder rowBuilder = new StringBuilder();
            
            
            boolean recFound = false;
        
            while (executeQuery.next()) {
                recFound = true;
                rowBuilder.append("<tr>\n" +
                "                       <td>"+executeQuery.getInt("packing_line_num")+"</td>    \n" + 
                "				<td>"+executeQuery.getInt("segment1")+"</td>\n" + 
                "			<td>"+executeQuery.getString("line_num")+"</td>\n" + 
                "			<td>"+executeQuery.getString("item_description")+"</td>\n" + 
                "			<td>"+executeQuery.getInt("packing_qty")+"</td>\n" + 
                "			<td>"+executeQuery.getString("parent_challan_number")+"</td>\n" + 
                
                "			</tr>");
                
            }
            
            
            String notificationBody = html1+rowBuilder.toString()+html3;
            System.out.println(notificationBody);
            cst =
                this.getDBTransaction()
                .createCallableStatement("begin " + "SENDMAIL1.SMAIL(?,?,?,?,?)" + "; end;", 0);
            
            cst.setObject(1,"usmanriaz@usaparel.com");
            cst.setObject(2, "usmanriaz@usaparel.com");
            cst.setObject(3, "Test Email");
            cst.setObject(4, notificationBody);
            cst.setObject(5, null);
            cst.executeUpdate();
            
            if (recFound){//if result set has any row then change status
                setChallanStatus(status);
                getDBTransaction().commit();
            }
            
        }catch(Exception ex){
            ex.printStackTrace();
        }finally{
            if (executeQuery != null)
                try{
                    executeQuery.close();    
                }catch(Exception es){
                    
                }
            
            if (pst != null)
                try{
                    pst.close();    
                }catch(Exception es){
                    
                }
            if(cst != null)
                try{
                    cst.close();    
                }catch(Exception es){
                    
                }
            
            getViewObject().executeQuery();
                
        }
        
        
    }
}

